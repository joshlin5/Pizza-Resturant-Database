CREATE TABLE TOPPING
	(Name			VARCHAR(20)		NOT NULL,
	Price			DECIMAL(3,2)		NOT NULL,
	Cost			DECIMAL(3,2)		NOT NULL,
	Inventory		DECIMAL(3,2),
	Small_Amt		DECIMAL(3,2),
	Medium_Amt		DECIMAL(3,2),
	Large_Amt		DECIMAL(3,2),
	XLarge_Amt		DECIMAL(3,2),
	CONSTRAINT TOP_PK
		PRIMARY KEY(Name)
	);

CREATE TABLE PIZZA
	(PID			INT			NOT NULL,
	 Timestamp		TIMESTAMP		NOT NULL,
	 Completed		BOOLEAN,
	 Total_Price		DECIMAL(5,2)		NOT NULL,
	 Total_Cost		DECIMAL(5,2)		NOT NULL,
	 OID			INT,
	 BID			INT,
	 CONSTRAINT PIZ_PK
	 	PRIMARY KEY(PID)
	);

CREATE TABLE CONTAINS
	(PID			INT			NOT NULL,
	 Tname			VARCHAR(20)		NOT NULL,
	 Extra			BOOLEAN,
	 CONSTRAINT CON_PK
	 	PRIMARY KEY(PID, Tname),
	 CONSTRAINT CON_PIZ_FK
	 	FOREIGN KEY(PID) REFERENCES PIZZA(PID)
	 	ON UPDATE CASCADE	ON DELETE CASCADE,
	 CONSTRAINT CON_TOP_FK
	 	FOREIGN KEY(Tname) REFERENCES TOPPING(Name)
	 	ON UPDATE CASCADE	ON DELETE CASCADE
	);

CREATE TABLE BASE_PRICE
	(BID			INT			NOT NULL,
	 Size			VARCHAR(8)		NOT NULL,
	 Crust_Type		VARCHAR(11)		NOT NULL,
	 Price			DECIMAL(5,2)		NOT NULL,
	 Cost			DECIMAL(5,2)		NOT NULL,
	 CONSTRAINT BAS_PK
	 	PRIMARY KEY(BID)
	);

CREATE TABLE ORDERS -- changed to have S because order is a keyword
	(OID			INT			NOT NULL,
	 Price			DECIMAL(6,2)		NOT NULL,
	 Cost			DECIMAL(6,2)		NOT NULL,
	 CONSTRAINT ORD_PK
	 	PRIMARY KEY(OID)
	);

CREATE TABLE CUSTOMER
	(CID			INT			NOT NULL,
	 Name			VARCHAR(30),
	 Phone_Num		CHAR(12),
	 Address		VARCHAR(50),
	 CONSTRAINT CUS_PK
	 	PRIMARY KEY(CID)
	);

CREATE TABLE PICK_UP
	(OID			INT			NOT NULL,
	 CID			INT,
	 CONSTRAINT PIC_PK
	 	PRIMARY KEY(OID),
	 CONSTRAINT PIC_ORD_FK
	 	FOREIGN KEY(OID) REFERENCES ORDERS(OID)
	 	ON UPDATE CASCADE	ON DELETE CASCADE,
	 CONSTRAINT PIC_CUS_FK
	 	FOREIGN KEY(CID) REFERENCES CUSTOMER(CID)
	 	ON UPDATE CASCADE
	);

CREATE TABLE DELIVERY
	(OID			INT			NOT NULL,
	 CID			INT,
	 CONSTRAINT DEL_PK
	 	PRIMARY KEY(OID),
	 CONSTRAINT DEL_ORD_FK
	 	FOREIGN KEY(OID) REFERENCES ORDERS(OID)
	 	ON UPDATE CASCADE	ON DELETE CASCADE,
	 CONSTRAINT DEL_CUS_FK
	 	FOREIGN KEY(CID) REFERENCES CUSTOMER(CID)
	 	ON UPDATE CASCADE
	);

CREATE TABLE DINE_IN
	(OID			INT			NOT NULL,
	 Table_Num		INT			NOT NULL,
	 CONSTRAINT DIN_PK
	 	PRIMARY KEY(OID),
	 CONSTRAINT DIN_ORD_FK
	 	FOREIGN KEY(OID) REFERENCES ORDERS(OID)
	 	ON UPDATE CASCADE	ON DELETE CASCADE
	);

CREATE TABLE SEAT_NUM
	(OID			INT			NOT NULL,
	 Seat_Num		INT			NOT NULL,
	 CONSTRAINT SEA_PK
	 	PRIMARY KEY(OID, Seat_Num),
	 CONSTRAINT SEA_ORD_FK
	 	FOREIGN KEY(OID) REFERENCES DINE_IN(OID)
	 	ON UPDATE CASCADE	ON DELETE CASCADE
	);

CREATE TABLE DISCOUNT
	(Name			VARCHAR(25)		NOT NULL,
	 CONSTRAINT DIS_PK
	 	PRIMARY KEY(Name)
	);

CREATE TABLE PERCENTAGE
	(Dname			VARCHAR(25)		NOT NULL,
	 Percent_Off		INT			NOT NULL,
	 CONSTRAINT PER_PK
	 	PRIMARY KEY(Dname),
	 CONSTRAINT PER_DIS_FK
	 	FOREIGN KEY(Dname) REFERENCES DISCOUNT(Name)
	 	ON UPDATE CASCADE	ON DELETE CASCADE
	);

CREATE TABLE DOLLAR_AMOUNT
	(Dname			VARCHAR(25)		NOT NULL,
	 Amount_Off		DECIMAL(5,2)		NOT NULL,
	 CONSTRAINT DOL_PK
	 	PRIMARY KEY(Dname),
	 CONSTRAINT DOL_DIS_FK
	 	FOREIGN KEY(Dname) REFERENCES DISCOUNT(Name)
	 	ON UPDATE CASCADE	ON DELETE CASCADE
	);

CREATE TABLE APPLIES_PIZZA
	(Dname			VARCHAR(25)		NOT NULL,
	 PID			INT			NOT NULL,
	 CONSTRAINT APP_PIZ_PK
	 	PRIMARY KEY(Dname, PID),
	 CONSTRAINT APP_PIZ_DIS_FK
	 	FOREIGN KEY(Dname) REFERENCES DISCOUNT(Name)
	 	ON UPDATE CASCADE	ON DELETE CASCADE,
	 CONSTRAINT APP_PIZ_PIZ_FK
	 	FOREIGN KEY(PID) REFERENCES PIZZA(PID)
	 	ON UPDATE CASCADE	ON DELETE CASCADE
	);

CREATE TABLE APPLIES_ORDER
	(Dname			VARCHAR(25)		NOT NULL,
	 OID			INT			NOT NULL,
	 CONSTRAINT APP_ORD_PK
	 	PRIMARY KEY(Dname, OID),
	 CONSTRAINT APP_ORD_DIS_FK
	 	FOREIGN KEY(Dname) REFERENCES DISCOUNT(Name)
	 	ON UPDATE CASCADE	ON DELETE CASCADE,
	 CONSTRAINT APP_ORD_ORD_FK
	 	FOREIGN KEY(OID) REFERENCES ORDERS(OID)
	 	ON UPDATE CASCADE	ON DELETE CASCADE
	);

ALTER TABLE PIZZA ADD CONSTRAINT PIZ_ORD_FK
	FOREIGN KEY(OID) REFERENCES ORDERS(OID)
	ON UPDATE CASCADE	ON DELETE CASCADE;
ALTER TABLE PIZZA ADD CONSTRAINT PIZ_BAS_FK
	FOREIGN KEY(BID) REFERENCES BASE_PRICE(BID)
	ON UPDATE CASCADE;
